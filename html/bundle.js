$(() => { $("[data-select]").each(function(){ var querySelect = $($("[name="+ $(this).attr("data-select") + "]")[0]); var arrSelect = querySelect.closest(".select-component").find(".select-item"); for(i = 0; i < arrSelect.length; i++){ $(arrSelect[i]).bind("select-change", { oDataSelect : $(this) }, function(e){ var arrImages = $(e.data.oDataSelect).find(".box-gray-card-images").children(); var strCard = $(this).find(".select-text").text().toLowerCase(); for(j = 0; j < arrImages.length; j++){ var oImage = arrImages[j]; if(oImage.name ==  strCard){ $(oImage).removeClass("hidden"); } else { if(!$(oImage).hasClass("hidden")) $(oImage).addClass("hidden"); } } }) } }) }); $(() => { utils.setClassEvent({elements: ".box-notification-button", theParent: ".box-notification-toggle"}) }); $(() => { utils.checkForMissingImage(".header-component .header-img", image => image.removeClass("hidden")) }); $(() => { utils.setClassEvent({ elements: ".list-component:not(.list-open-multiple) .list-item.-toggle .list-box", theParent: ".list-item.-toggle" }); utils.setClassEvent({ elements: ".list-component.list-open-multiple .list-item.-toggle .list-box", theParent: ".list-item.-toggle", openMultiples: false}) }); $(() => { utils.setClassEvent({ elements: ".list-card-toggle-button", theParent: ".list-card-item" }) }); $(() => { $(".list-swipe-component .swiper-container").each(function(){ var oSwiper = new Swiper(this, { slidesPerView: 1, loop: false, navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev", }, }); }); $("[data-slide]").on("click",function(e){ var swiper_next = $(e.currentTarget).closest(".swiper-wrapper").find(".swiper-button-next"); var swiper_prev = $(e.currentTarget).closest(".swiper-wrapper").find(".swiper-button-prev"); var swiper_command = $(e.currentTarget).attr("data-slide"); switch(swiper_command){ case "next": swiper_next.click(); break; case "prev": swiper_prev.click(); break; } }); }); $(document).ready(function(){ $("[open-modal]").bind("click", function(e){ e.stopPropagation(); var modal = $(e.currentTarget).attr("open-modal"); var bool_once = $(e.currentTarget).attr("data-once"); e.preventDefault(); $("[data-modal="+modal+"]").addClass("active"); $("#app").addClass("overflow-hidden"); if(bool_once) $(e.currentTarget).unbind("click").css("cursor","default"); }); $("[data-action-modal]").on("click", e => { const action = $(e.currentTarget).attr("data-action-modal"), target = $(e.currentTarget).attr("data-target-modal"), actions = { close: function() { $(".modal-component").removeClass("active"); $("#app").removeClass("overflow-hidden"); }, open: function(){ $(".modal-component").removeClass("active"); $("[data-modal="+target+"]").addClass("active"); } }; actions[action]() }); $(".modal-component").on("click", e => { $(e.currentTarget).removeClass("active"); $("#app").removeClass("overflow-hidden") }); $(".modal-box").on("click", e => e.stopPropagation()) }); $(() => { utils.setClassEvent({elements: ".modal-swipe-footer", theParent: ".modal-swipe-component", openMultiples: false}); utils.setClassEvent({elements: ".modal-swipe-overlay", theParent: ".modal-swipe-component", openMultiples: false}); dataSwipe = { height: $(".modal-swipe-component").find(".modal-swipe-container").height(), next: $(".modal-swipe-component").next(), padding: 30 }; $(dataSwipe.next).css("padding-top",(dataSwipe.height + dataSwipe.padding)) }); $(() => { const step = $(".progress-steps-component [data-step]").attr("data-step"); if(step) $(".progress-steps-component .progress-steps-step:nth-last-child(${step})").addClass("active") }); $(() => { utils.setClassEvent({elements: ".select-component .select-fake", clickAway: true}); utils.setClassEvent({elements: ".select-component .select-box .select-item", theParent: ".select-fake"}); utils.setClassEvent({elements: ".select-component .select-box .select-default", theParent: ".select-fake"}) }); $(() => { var slideCardSwiper = new Swiper(".slide-card", { loop: false, slidesPerView: 2.5, breakpoints: { 375: { slidesPerView: 2.5 }, 320: { slidesPerView: 2.1 } } }) });